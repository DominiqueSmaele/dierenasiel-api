name: run-tests

on:
    push:
      branches:
        - main
        - develop
    pull_request:

jobs:
  pre_job:
      continue-on-error: true
      runs-on: ubuntu-latest
      outputs:
        should_skip: ${{ steps.skip_check.outputs.should_skip }}
      steps:
        - id: skip_check
          uses: fkirc/skip-duplicate-actions@master
          with:
            skip_after_successful_duplicate: 'true'

  run-tests:
      needs: pre_job
      if: ${{ needs.pre_job.outputs.should_skip != 'true' }}

      runs-on: ubuntu-latest

      services:
        mysql:
            image: mysql:8.0.19
            env:
                MYSQL_ALLOW_EMPTY_PASSWORD: yes
                MYSQL_DATABASE: testing
            ports:
                - 3306
            options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      steps:
          - name: Update apt
            run: sudo apt-get update --fix-missing

          - name: Checkout code
            uses: actions/checkout@v3

          - name: Setup PHP
            uses: shivammathur/setup-php@v2
            with:
                php-version: 8.2
                coverage: xdebug

          - name: Get Composer cache directory
            id: composer-cache
            run: |
              echo "::set-output name=dir::$(composer config cache-files-dir)"

          - name: Cache Composer packages
            uses: actions/cache@v3
            with:
              path: ${{ steps.composer-cache.outputs.dir }}
              key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
              restore-keys: |
                ${{ runner.os }}-composer-

          - name: Run composer install
            run: |
              composer config "http-basic.packagehub.nextapps.be" "${{ secrets.PACKAGEHUB_USERNAME }}" "${{ secrets.PACKAGEHUB_PASSWORD }}"
              composer config "http-basic.wire-elements-pro.composer.sh" "${{ secrets.WIRE_ELEMENTS_USERNAME }}" "${{ secrets.WIRE_ELEMENTS_PASSWORD }}"
              composer install -n --prefer-dist
            env:
                APP_ENV: testing

          - name: Prepare Laravel Application
            run: |
                cp .env.example .env
                php artisan key:generate
                php artisan migrate --force
                php artisan db:seed --force --no-interaction
            env:
                  APP_URL: http://localhost
                  DB_CONNECTION: mysql
                  DB_HOST: 127.0.0.1
                  DB_PORT: ${{ job.services.mysql.ports['3306'] }}
                  DB_DATABASE: testing
                  DB_USERNAME: root
                  DB_PASSWORD: ''
                  BROADCAST_DRIVER: log
                  CACHE_DRIVER: array
                  SESSION_DRIVER: array

          - name: Execute tests
            run: php artisan test --parallel --coverage-text --coverage-clover=coverage.clover
            env:
                  APP_URL: http://localhost
                  DB_CONNECTION: mysql
                  DB_HOST: 127.0.0.1
                  DB_PORT: ${{ job.services.mysql.ports['3306'] }}
                  DB_DATABASE: testing
                  DB_USERNAME: root
                  DB_PASSWORD: ''
                  BROADCAST_DRIVER: log
                  CACHE_DRIVER: array
                  SESSION_DRIVER: array

          - name: Upload artifacts
            uses: actions/upload-artifact@master
            if: failure()
            with:
              name: Logs
              path: ./storage/logs
